# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a reusable executor called "node".
# See: https://circleci.com/docs/2.0/reusing-config/#defining-executors
orbs:
  node: circleci/node@5.2.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-and-test:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    macos:
      xcode: 15.2.0

    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - restore_cache:
          key: node-deps-{{ arch }}-v1-{{ checksum "package-lock.json" }}
      - run:
          name: "Intall gzip"
          command: "brew install gzip"
      - run:
          name: "Install applesimutils"
          command: "brew tap wix/brew && brew install applesimutils"
      - run:
          name: "Install node modules"
          command: "npm ci && npm install -g eas-cli@7.6.0"
      - run:
          name: "Build"
          command: "npm run build"
      - run:
          name: "Extract"
          command: "mv ./*.tar.gz build.tar.gz && tar -xvzf build.tar.gz"
      - run:
          name: "Test"
          command: |
            npm run start &
            npm run test:ci -- \
            --loglevel verbose --take-screenshots all --record-logs all
      - store_artifacts:
          path: artifacts/
      - store_artifacts:
          path: build.tar.gz
      - save_cache:
          key: node-deps-{{ arch }}-v1-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build:
    jobs:
      - build-and-test:
          filters:
            branches:
              only:
                - main
  lint:
    jobs:
      - node/run:
          npm-run: lint
  format:
    jobs:
      - node/run:
          npm-run: format:check
  test:
    jobs:
      - node/run:
          npm-run: test
  type-check:
    jobs:
      - node/run:
          npm-run: tsc:check
